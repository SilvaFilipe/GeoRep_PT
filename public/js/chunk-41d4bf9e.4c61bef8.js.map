{"version":3,"sources":["webpack:///../../../src/components/VTabs/VTab.ts","webpack:///../../../src/components/VBtnToggle/VBtnToggle.ts","webpack:///../../../src/components/VTabs/VTabItem.ts","webpack:///../../../src/components/VSlideGroup/VSlideGroup.ts","webpack:///../../../src/mixins/ssr-bootable/index.ts","webpack:///../../../src/components/VTabs/VTabsBar.ts","webpack:///../../../src/components/VTabs/VTabsItems.ts","webpack:///../../../src/components/VTabs/VTabsSlider.ts","webpack:///../../../src/components/VTabs/VTabs.ts"],"names":["baseMixins","name","props","ripple","type","Boolean","default","data","proxyClass","computed","classes","this","groupClasses","value","to","$router","Object","resolve","mounted","methods","click","href","indexOf","e","$el","blur","render","String","role","tabindex","keydown","h","tag","$slots","backgroundColor","borderless","dense","group","rounded","shaped","tile","themeClasses","genData","setTextColor","setBackgroundColor","id","genWindowItem","item","BaseSlideGroup","mixins","directives","Resize","Touch","activeClass","centerActive","nextIcon","mobileBreakPoint","Number","validator","v","isNaN","parseInt","prevIcon","showArrows","internalItemsLength","isOverflowing","resizeTimeout","startX","scrollOffset","widths","content","wrapper","__cachedNext","genTransition","__cachedPrev","hasAffixes","hasNext","Math","hasPrev","isMobile","$vuetify","breakpoint","width","watch","internalValue","beforeUpdate","$children","updated","genNext","slot","$scopedSlots","next","$createElement","staticClass","class","on","key","genContent","ref","onResize","genIcon","icon","rtl","location","upperLocation","hasAffix","VIcon","disabled","genPrev","prev","genWrapper","start","move","end","calculateNewOffset","sign","newAbosluteOffset","direction","onAffixClick","onTouchStart","onTouchMove","onTouchEnd","maxScrollOffset","overflowCheck","fn","scrollIntoView","selectedIndex","calculateCenteredOffset","selectedItem","calculateUpdatedOffset","clientWidth","selectedElement","offsetLeft","currentScrollOffset","totalWidth","itemOffset","additionalOffset","offsetCentered","scrollTo","$refs","setWidths","window","provide","slideGroup","isBooted","tabsBar","items","$route","callSlider","onRouteChange","newPath","val","oldPath","oldVal","hasNew","hasOld","undefined","VWindow","mandatory","isDark","getValue","alignWithTitle","centered","fixedTabs","grow","height","hideSlider","iconsAndText","optional","right","sliderColor","sliderSize","vertical","slider","left","top","transitionTime","isReversed","sliderStyles","transition","computedColor","selectedItems","activeTab","el","scrollWidth","genBar","style","dark","light","change","VTabsBar","genSlider","genItems","VTabsItems","VTabsSlider","color","clearTimeout","parseNodes","tab","length","i","vnode","modifiers","quiet"],"mappings":"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","file":"js/chunk-41d4bf9e.4c61bef8.js","sourcesContent":["// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Routable from '../../mixins/routable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport { keyCodes } from './../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { ExtractVue } from './../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\nconst baseMixins = mixins(\n  Routable,\n  // Must be after routable\n  // to overwrite activeClass\n  GroupableFactory('tabsBar'),\n  Themeable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n}\n\nexport default baseMixins.extend<options>().extend(\n  /* @vue/component */\n).extend({\n  name: 'v-tab',\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  data: () => ({\n    proxyClass: 'v-tab--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-tab': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-tab--disabled': this.disabled,\n        ...this.groupClasses,\n      }\n    },\n    value (): any {\n      let to = this.to || this.href || ''\n\n      if (this.$router &&\n        this.to === Object(this.to)\n      ) {\n        const resolve = this.$router.resolve(\n          this.to,\n          this.$route,\n          this.append\n        )\n\n        to = resolve.href\n      }\n\n      return to.replace('#', '')\n    },\n  },\n\n  mounted () {\n    this.onRouteChange()\n  },\n\n  methods: {\n    click (e: KeyboardEvent | MouseEvent): void {\n      // If user provides an\n      // actual link, do not\n      // prevent default\n      if (this.href &&\n        this.href.indexOf('#') > -1\n      ) e.preventDefault()\n\n      if (e.detail) this.$el.blur()\n\n      this.$emit('click', e)\n\n      this.to || this.toggle()\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      'aria-selected': String(this.isActive),\n      role: 'tab',\n      tabindex: 0,\n    }\n    data.on = {\n      ...data.on,\n      keydown: (e: KeyboardEvent) => {\n        if (e.keyCode === keyCodes.enter) this.click(e)\n\n        this.$emit('keydown', e)\n      },\n    }\n\n    return h(tag, data, this.$slots.default)\n  },\n})\n","// Styles\nimport './VBtnToggle.sass'\n\n// Mixins\nimport ButtonGroup from '../../mixins/button-group'\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  ButtonGroup,\n  Colorable\n).extend({\n  name: 'v-btn-toggle',\n\n  props: {\n    backgroundColor: String,\n    borderless: Boolean,\n    dense: Boolean,\n    group: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...ButtonGroup.options.computed.classes.call(this),\n        'v-btn-toggle': true,\n        'v-btn-toggle--borderless': this.borderless,\n        'v-btn-toggle--dense': this.dense,\n        'v-btn-toggle--group': this.group,\n        'v-btn-toggle--rounded': this.rounded,\n        'v-btn-toggle--shaped': this.shaped,\n        'v-btn-toggle--tile': this.tile,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  methods: {\n    genData () {\n      const data = this.setTextColor(this.color, {\n        ...ButtonGroup.options.methods.genData.call(this),\n      })\n\n      if (this.group) return data\n\n      return this.setBackgroundColor(this.backgroundColor, data)\n    },\n  },\n})\n","// Extensions\nimport VWindowItem from '../VWindow/VWindowItem'\n\n/* @vue/component */\nexport default VWindowItem.extend({\n  name: 'v-tab-item',\n\n  props: {\n    id: String,\n  },\n\n  methods: {\n    genWindowItem () {\n      const item = VWindowItem.options.methods.genWindowItem.call(this)\n\n      item.data!.domProps = item.data!.domProps || {}\n      item.data!.domProps.id = this.id || this.value\n\n      return item\n    },\n  },\n})\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchmoveX: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<typeof BaseItemGroup>\n/* eslint-enable indent */\n>(\n  BaseItemGroup\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    mobileBreakPoint: {\n      type: [Number, String],\n      default: 1264,\n      validator: (v: any) => !isNaN(parseInt(v)),\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: Boolean,\n  },\n\n  data: () => ({\n    internalItemsLength: 0,\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      return (\n        (this.showArrows || !this.isMobile) &&\n        this.isOverflowing\n      )\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n    isMobile (): boolean {\n      return this.$vuetify.breakpoint.width < this.mobileBreakPoint\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      this.$refs.content.style.transform = `translateX(${-val}px)`\n    },\n  },\n\n  beforeUpdate () {\n    this.internalItemsLength = (this.$children || []).length\n  },\n\n  updated () {\n    if (this.internalItemsLength === (this.$children || []).length) return\n    this.setWidths()\n  },\n\n  methods: {\n    genNext (): VNode | null {\n      if (!this.hasAffixes) return null\n\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      this.scrollOffset = this.startX - e.touchmoveX\n    },\n    onTouchEnd () {\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = this.calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = this.calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    calculateUpdatedOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean, currentScrollOffset: number): number {\n      const clientWidth = selectedElement.clientWidth\n      const offsetLeft = rtl\n        ? (widths.content - selectedElement.offsetLeft - clientWidth)\n        : selectedElement.offsetLeft\n\n      if (rtl) {\n        currentScrollOffset = -currentScrollOffset\n      }\n\n      const totalWidth = widths.wrapper + currentScrollOffset\n      const itemOffset = clientWidth + offsetLeft\n      const additionalOffset = clientWidth * 0.4\n\n      if (offsetLeft < currentScrollOffset) {\n        currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n      } else if (totalWidth < itemOffset) {\n        currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n      }\n\n      return rtl ? -currentScrollOffset : currentScrollOffset\n    },\n    calculateCenteredOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean): number {\n      const { offsetLeft, clientWidth } = selectedElement\n\n      if (rtl) {\n        const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n        return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      } else {\n        const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n        return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths /* istanbul ignore next */  () {\n      window.requestAnimationFrame(() => {\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        this.isOverflowing = this.widths.wrapper < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n","import Vue from 'vue'\n\n/**\n * SSRBootable\n *\n * @mixin\n *\n * Used in layout components (drawer, toolbar, content)\n * to avoid an entry animation when using SSR\n */\nexport default Vue.extend({\n  name: 'ssr-bootable',\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  mounted () {\n    // Use setAttribute instead of dataset\n    // because dataset does not work well\n    // with unit tests\n    window.requestAnimationFrame(() => {\n      this.$el.setAttribute('data-booted', 'true')\n      this.isBooted = true\n    })\n  },\n})\n","// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'\n\n// Components\nimport VTab from './VTab'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport SSRBootable from '../../mixins/ssr-bootable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { Route } from 'vue-router'\nimport { VNode } from 'vue'\n\ntype VTabInstance = InstanceType<typeof VTab>\n\nexport default mixins(\n  BaseSlideGroup,\n  SSRBootable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-tabs-bar',\n\n  provide () {\n    return {\n      tabsBar: this,\n    }\n  },\n\n  computed: {\n    classes () {\n      return {\n        ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-tabs-bar': true,\n        'v-tabs-bar--is-mobile': this.isMobile,\n        // TODO: Remove this and move to v-slide-group\n        'v-tabs-bar--show-arrows': this.showArrows,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  watch: {\n    items: 'callSlider',\n    internalValue: 'callSlider',\n    $route: 'onRouteChange',\n  },\n\n  methods: {\n    callSlider () {\n      if (!this.isBooted) return\n\n      this.$emit('call:slider')\n    },\n    genContent () {\n      const render = BaseSlideGroup.options.methods.genContent.call(this)\n\n      render.data = render.data || {}\n      render.data.staticClass += ' v-tabs-bar__content'\n\n      return render\n    },\n    onRouteChange (val: Route, oldVal: Route) {\n      /* istanbul ignore next */\n      if (this.mandatory) return\n\n      const items = this.items as VTabInstance[]\n      const newPath = val.path\n      const oldPath = oldVal.path\n\n      let hasNew = false\n      let hasOld = false\n\n      for (const item of items) {\n        if (item.to === newPath) hasNew = true\n        else if (item.to === oldPath) hasOld = true\n\n        if (hasNew && hasOld) break\n      }\n\n      // If we have an old item and not a new one\n      // it's assumed that the user navigated to\n      // a path that is not present in the items\n      if (!hasNew && hasOld) this.internalValue = undefined\n    },\n  },\n\n  render (h): VNode {\n    const render = BaseSlideGroup.options.render.call(this, h)\n\n    render.data!.attrs = {\n      role: 'tablist',\n    }\n\n    return render\n  },\n})\n","// Extensions\nimport VWindow from '../VWindow/VWindow'\n\n// Types & Components\nimport { BaseItemGroup, GroupableInstance } from './../VItemGroup/VItemGroup'\n\n/* @vue/component */\nexport default VWindow.extend({\n  name: 'v-tabs-items',\n\n  props: {\n    mandatory: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VWindow.options.computed.classes.call(this),\n        'v-tabs-items': true,\n      }\n    },\n    isDark (): boolean {\n      return this.rootIsDark\n    },\n  },\n\n  methods: {\n    getValue (item: GroupableInstance, i: number) {\n      return item.id || BaseItemGroup.options.methods.getValue.call(this, item, i)\n    },\n  },\n})\n","// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\n/* @vue/component */\nexport default mixins(Colorable).extend({\n  name: 'v-tabs-slider',\n\n  render (h): VNode {\n    return h('div', this.setBackgroundColor(this.color, {\n      staticClass: 'v-tabs-slider',\n    }))\n  },\n})\n","// Styles\nimport './VTabs.sass'\n\n// Components\nimport VTabsBar from './VTabsBar'\nimport VTabsItems from './VTabsItems'\nimport VTabsSlider from './VTabsSlider'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport { ExtractVue } from './../../util/mixins'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\nconst baseMixins = mixins(\n  Colorable,\n  Proxyable,\n  Themeable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $refs: {\n    items: InstanceType<typeof VTabsBar>\n  }\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-tabs',\n\n  directives: {\n    Resize,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: '',\n    },\n    alignWithTitle: Boolean,\n    backgroundColor: String,\n    centerActive: Boolean,\n    centered: Boolean,\n    fixedTabs: Boolean,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: undefined,\n    },\n    hideSlider: Boolean,\n    iconsAndText: Boolean,\n    mobileBreakPoint: {\n      type: [Number, String],\n      default: 1264,\n    },\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    optional: Boolean,\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    right: Boolean,\n    showArrows: Boolean,\n    sliderColor: String,\n    sliderSize: {\n      type: [Number, String],\n      default: 2,\n    },\n    vertical: Boolean,\n  },\n\n  data () {\n    return {\n      resizeTimeout: 0,\n      slider: {\n        height: null as null | number,\n        left: null as null | number,\n        right: null as null | number,\n        top: null as null | number,\n        width: null as null | number,\n      },\n      transitionTime: 300,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-tabs--align-with-title': this.alignWithTitle,\n        'v-tabs--centered': this.centered,\n        'v-tabs--fixed-tabs': this.fixedTabs,\n        'v-tabs--grow': this.grow,\n        'v-tabs--icons-and-text': this.iconsAndText,\n        'v-tabs--right': this.right,\n        'v-tabs--vertical': this.vertical,\n        ...this.themeClasses,\n      }\n    },\n    isReversed (): boolean {\n      return this.$vuetify.rtl && this.vertical\n    },\n    sliderStyles (): object {\n      return {\n        height: convertToUnit(this.slider.height),\n        left: this.isReversed ? undefined : convertToUnit(this.slider.left),\n        right: this.isReversed ? convertToUnit(this.slider.right) : undefined,\n        top: this.vertical ? convertToUnit(this.slider.top) : undefined,\n        transition: this.slider.left != null ? null : 'none',\n        width: convertToUnit(this.slider.width),\n      }\n    },\n    computedColor (): string {\n      if (this.color) return this.color\n      else if (this.isDark && !this.appIsDark) return 'white'\n      else return 'primary'\n    },\n  },\n\n  watch: {\n    alignWithTitle: 'callSlider',\n    centered: 'callSlider',\n    centerActive: 'callSlider',\n    fixedTabs: 'callSlider',\n    grow: 'callSlider',\n    right: 'callSlider',\n    showArrows: 'callSlider',\n    vertical: 'callSlider',\n    '$vuetify.application.left': 'onResize',\n    '$vuetify.application.right': 'onResize',\n    '$vuetify.rtl': 'onResize',\n  },\n\n  mounted () {\n    this.$nextTick(() => {\n      window.setTimeout(this.callSlider, 30)\n    })\n  },\n\n  methods: {\n    callSlider () {\n      if (\n        this.hideSlider ||\n        !this.$refs.items ||\n        !this.$refs.items.selectedItems.length\n      ) {\n        this.slider.width = 0\n        return false\n      }\n\n      this.$nextTick(() => {\n        // Give screen time to paint\n        const activeTab = this.$refs.items.selectedItems[0]\n        /* istanbul ignore if */\n        if (!activeTab || !activeTab.$el) {\n          this.slider.width = 0\n          this.slider.left = 0\n          return\n        }\n        const el = activeTab.$el as HTMLElement\n\n        this.slider = {\n          height: !this.vertical ? Number(this.sliderSize) : el.scrollHeight,\n          left: this.vertical ? 0 : el.offsetLeft,\n          right: this.vertical ? 0 : el.offsetLeft + el.offsetWidth,\n          top: el.offsetTop,\n          width: this.vertical ? Number(this.sliderSize) : el.scrollWidth,\n        }\n      })\n\n      return true\n    },\n    genBar (items: VNode[], slider: VNode | null) {\n      const data = {\n        style: {\n          height: convertToUnit(this.height),\n        },\n        props: {\n          activeClass: this.activeClass,\n          centerActive: this.centerActive,\n          dark: this.dark,\n          light: this.light,\n          mandatory: !this.optional,\n          mobileBreakPoint: this.mobileBreakPoint,\n          nextIcon: this.nextIcon,\n          prevIcon: this.prevIcon,\n          showArrows: this.showArrows,\n          value: this.internalValue,\n        },\n        on: {\n          'call:slider': this.callSlider,\n          change: (val: any) => {\n            this.internalValue = val\n          },\n        },\n        ref: 'items',\n      }\n\n      this.setTextColor(this.computedColor, data)\n      this.setBackgroundColor(this.backgroundColor, data)\n\n      return this.$createElement(VTabsBar, data, [\n        this.genSlider(slider),\n        items,\n      ])\n    },\n    genItems (items: VNode | null, item: VNode[]) {\n      // If user provides items\n      // opt to use theirs\n      if (items) return items\n\n      // If no tabs are provided\n      // render nothing\n      if (!item.length) return null\n\n      return this.$createElement(VTabsItems, {\n        props: {\n          value: this.internalValue,\n        },\n        on: {\n          change: (val: any) => {\n            this.internalValue = val\n          },\n        },\n      }, item)\n    },\n    genSlider (slider: VNode | null) {\n      if (this.hideSlider) return null\n\n      if (!slider) {\n        slider = this.$createElement(VTabsSlider, {\n          props: { color: this.sliderColor },\n        })\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-tabs-slider-wrapper',\n        style: this.sliderStyles,\n      }, [slider])\n    },\n    onResize () {\n      if (this._isDestroyed) return\n\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.callSlider, 0)\n    },\n    parseNodes () {\n      let items = null\n      let slider = null\n      const item = []\n      const tab = []\n      const slot = this.$slots.default || []\n      const length = slot.length\n\n      for (let i = 0; i < length; i++) {\n        const vnode = slot[i]\n\n        if (vnode.componentOptions) {\n          switch (vnode.componentOptions.Ctor.options.name) {\n            case 'v-tabs-slider': slider = vnode\n              break\n            case 'v-tabs-items': items = vnode\n              break\n            case 'v-tab-item': item.push(vnode)\n              break\n            // case 'v-tab' - intentionally omitted\n            default: tab.push(vnode)\n          }\n        } else {\n          tab.push(vnode)\n        }\n      }\n\n      /**\n       * tab: array of `v-tab`\n       * slider: single `v-tabs-slider`\n       * items: single `v-tabs-items`\n       * item: array of `v-tab-item`\n       */\n      return { tab, slider, items, item }\n    },\n  },\n\n  render (h): VNode {\n    const { tab, slider, items, item } = this.parseNodes()\n\n    return h('div', {\n      staticClass: 'v-tabs',\n      class: this.classes,\n      directives: [{\n        name: 'resize',\n        modifiers: { quiet: true },\n        value: this.onResize,\n      }],\n    }, [\n      this.genBar(tab, slider),\n      this.genItems(items, item),\n    ])\n  },\n})\n"],"sourceRoot":""}